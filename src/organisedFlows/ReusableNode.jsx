import React, { useState } from 'react';
import { IoIosAddCircle } from 'react-icons/io';
import { MdCancel } from 'react-icons/md';
import { RiListSettingsLine } from 'react-icons/ri';
import ReusableForm from '../organisedFlows/ReusableForm';
import { fieldsMapping } from './FormField';

const ReusableNode = ({ data }) => {
    const [showForm, setShowForm] = useState(false);
    const [visible, setVisible] = useState(false);
    const [border, setBorder] = useState(false);
    const fields = fieldsMapping[data.text] || [];
    const handleConfigureClick = () => {
        setShowForm(true);
    };

    const handleFormSubmit = (formData) => {
        setBorder(true);
        setShowForm(false);
    };

    return (
        <>
            <div className='flex z-50'>
                {!showForm && (
                    <div
                        onMouseEnter={() => { setVisible(true) }}
                        onMouseLeave={() => { setVisible(false) }}
                        className='h-fit flex w-full'>
                        {
                            data.text === 'Database' ? (
                                <svg width="128" height="103" viewBox="0 0 128 103" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M64.0001 27C99.1016 27 127.557 20.9558 127.557 13.5C127.557 6.04416 99.1016 0 64.0001 0C28.8987 0 0.443359 6.04416 0.443359 13.5C0.443359 20.9558 28.8987 27 64.0001 27Z" fill={border ? "#4CA9A6" : "#747F81"} />
                                    <path d="M64.0001 28.0544C28.8977 28.0544 0.443359 22.3698 0.443359 15.409V90.3536C0.443359 97.3144 28.8977 102.999 64.0001 102.999C99.1026 102.999 127.557 97.3144 127.557 90.3536V15.293C127.557 22.3698 99.1026 28.0544 64.0001 28.0544Z" fill="#273335" />
                                    <path opacity="0.75" d="M64.0001 28.0544C28.8977 28.0544 0.443359 22.3698 0.443359 15.409V90.3536C0.443359 97.3144 28.8977 102.999 64.0001 102.999C99.1026 102.999 127.557 97.3144 127.557 90.3536V15.293C127.557 22.3698 99.1026 28.0544 64.0001 28.0544Z" fill="#273335" />
                                    <path d="M64 55.3518C32.5319 55.3518 0 51.6459 0 45.293H0.886427C0.886427 49.7047 26.2382 54.4694 64 54.4694C101.762 54.4694 127.114 49.7047 127.114 45.293H128C128 51.6459 95.4681 55.3518 64 55.3518Z" fill={border ? "#4CA9A6" : "white"} />
                                    <path d="M64 81.0578C32.5319 81.0578 0 77.352 0 70.999H0.886427C0.886427 75.4108 26.2382 80.1755 64 80.1755C101.762 80.1755 127.114 75.4108 127.114 70.999H128C128 77.352 95.4681 81.0578 64 81.0578Z" fill={border ? "#4CA9A6" : "white"} />


                                    <mask id="mask0_800_1876" maskType="alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="48" height="48"></mask>
                                    <g mask="url(#mask0_800_1876)">
                                        <path d="M22 34H26V26H34V22H26V14H22V22H14V26H22V34Z" fill="#1C1B1F" />
                                    </g>
                                </svg>
                            ) : data.text === 'Frontend' ? (
                                <div className={` bg-[#ededed] border-2 ${border ? `border-[#4CA9A6]` : `border-[#555555]`} pt-0 pb-0  rounded-lg shadow-2xl pl-20 pr-20 `}>
                                    <svg
                                        viewBox="0 0 34 32"
                                        fill={border ? "#00d8ff" : "black"}
                                        height="70"

                                        width="70"
                                    >
                                        <path
                                            d="M19.314 15.987a2.392 2.392 0 11-4.784 0 2.392 2.392 0 014.784 0z"
                                        />
                                        <path
                                            d="M16.922 24.783c1.878 1.826 3.729 2.906 5.221 2.906.489 0 .952-.103 1.337-.334 1.337-.772 1.826-2.701 1.363-5.453-.077-.489-.18-.977-.309-1.492.514-.154.977-.309 1.44-.463 2.598-1.003 4.038-2.392 4.038-3.909 0-1.543-1.44-2.932-4.038-3.909-.463-.18-.926-.334-1.44-.463.129-.514.232-1.003.309-1.492.437-2.803-.051-4.758-1.389-5.53-.386-.231-.849-.334-1.337-.334-1.466 0-3.344 1.08-5.221 2.906-1.852-1.826-3.704-2.906-5.195-2.906-.489 0-.952.103-1.337.334-1.337.772-1.826 2.701-1.363 5.453.077.489.18.977.309 1.492-.514.154-.977.309-1.44.463-2.598 1.003-4.038 2.392-4.038 3.909 0 1.543 1.44 2.932 4.038 3.909.463.18.926.334 1.44.463a16.882 16.882 0 00-.309 1.492c-.437 2.752.051 4.707 1.363 5.453.386.232.849.334 1.337.334 1.492.051 3.344-1.029 5.221-2.829zm-1.441-3.472c.463.026.952.026 1.44.026s.977 0 1.44-.026a24.523 24.523 0 01-1.44 1.723 24.252 24.252 0 01-1.44-1.723zm-3.189-2.649c.257.437.489.849.772 1.26a27.786 27.786 0 01-2.263-.386c.232-.694.489-1.415.797-2.135.206.411.437.849.694 1.26zM10.8 12.463c.72-.154 1.466-.283 2.263-.386-.257.412-.514.823-.772 1.26s-.489.849-.694 1.286a17.109 17.109 0 01-.797-2.161zm1.415 3.524c.334-.694.694-1.389 1.106-2.083.386-.669.823-1.337 1.26-2.006a35.293 35.293 0 014.682 0c.463.669.874 1.337 1.26 2.006.412.694.772 1.389 1.106 2.083a26.922 26.922 0 01-1.106 2.083c-.386.669-.823 1.337-1.26 2.006a35.293 35.293 0 01-4.682 0 28.695 28.695 0 01-1.26-2.006 27.106 27.106 0 01-1.106-2.083zm10.057-1.389l-.694-1.286c-.257-.437-.489-.849-.772-1.26.797.103 1.543.232 2.263.386-.231.72-.489 1.44-.797 2.161zm0 2.778c.309.72.566 1.44.797 2.135-.72.154-1.466.283-2.263.386.257-.412.514-.823.772-1.26.232-.386.463-.823.694-1.26zm.591 8.925c-.206.129-.463.18-.746.18-1.26 0-2.829-1.029-4.372-2.572a26.868 26.868 0 002.186-2.701 23.619 23.619 0 003.447-.54c.129.463.206.926.283 1.389.36 2.186.077 3.755-.797 4.244zm1.338-13.555c2.881.823 4.604 2.083 4.604 3.241 0 1.003-1.183 2.006-3.266 2.804-.412.154-.874.309-1.337.437a27.01 27.01 0 00-1.26-3.241c.514-1.106.952-2.186 1.26-3.241zm-2.058-7.253c.283 0 .514.051.746.18.849.489 1.157 2.032.797 4.244-.077.437-.18.9-.283 1.389a33.072 33.072 0 00-3.447-.54 23.774 23.774 0 00-2.186-2.701c1.543-1.518 3.112-2.572 4.372-2.572zm-3.781 5.17c-.463-.026-.952-.026-1.44-.026s-.977 0-1.44.026c.463-.617.952-1.183 1.44-1.723.489.54.977 1.132 1.44 1.723zm-7.382-4.99c.206-.129.463-.18.746-.18 1.26 0 2.829 1.029 4.372 2.572a26.756 26.756 0 00-2.186 2.701 23.619 23.619 0 00-3.447.54c-.129-.463-.206-.926-.283-1.389-.36-2.186-.077-3.729.797-4.244zM9.643 19.228c-2.881-.823-4.604-2.083-4.604-3.241 0-1.003 1.183-2.006 3.266-2.803.412-.154.874-.309 1.337-.437a27.01 27.01 0 001.26 3.241c-.514 1.106-.952 2.212-1.26 3.241zm.54 2.829c.077-.437.18-.9.283-1.389 1.106.257 2.263.437 3.447.54a23.66 23.66 0 002.186 2.701c-1.543 1.518-3.112 2.572-4.372 2.572-.283 0-.514-.051-.746-.18-.849-.489-1.157-2.032-.797-4.244z"
                                        />
                                    </svg>

                                </div>
                            ) : (
                                <div className={` bg-[#ededed] border-2 ${border ? `border-[#4CA9A6]` : `border-[#555555]`} pt-0 pb-0  rounded-lg shadow-2xl pl-20 pr-20 `}>

                                    <svg xmlns="http://www.w3.org/2000/svg" width="70px" height="70px" viewBox="0 0 64 64" fill="none"><path d="M31.885 16c-8.124 0-7.617 3.523-7.617 3.523l.01 3.65h7.752v1.095H21.197S16 23.678 16 31.876c0 8.196 4.537 7.906 4.537 7.906h2.708v-3.804s-.146-4.537 4.465-4.537h7.688s4.32.07 4.32-4.175v-7.019S40.374 16 31.885 16zm-4.275 2.454c.771 0 1.395.624 1.395 1.395s-.624 1.395-1.395 1.395a1.393 1.393 0 0 1-1.395-1.395c0-.771.624-1.395 1.395-1.395z" fill={border ? `url(#a)` : `black`} /><path d="M32.115 47.833c8.124 0 7.617-3.523 7.617-3.523l-.01-3.65H31.97v-1.095h10.832S48 40.155 48 31.958c0-8.197-4.537-7.906-4.537-7.906h-2.708v3.803s.146 4.537-4.465 4.537h-7.688s-4.32-.07-4.32 4.175v7.019s-.656 4.247 7.833 4.247zm4.275-2.454a1.393 1.393 0 0 1-1.395-1.395c0-.77.624-1.394 1.395-1.394s1.395.623 1.395 1.394c0 .772-.624 1.395-1.395 1.395z" fill={border ? `url(#b)` : `black`} /><defs><linearGradient id="a" x1="19.075" y1="18.782" x2="34.898" y2="34.658" gradientUnits="userSpaceOnUse"><stop stop-color="#387EB8" /><stop offset="1" stop-color="#366994" /></linearGradient><linearGradient id="b" x1="28.809" y1="28.882" x2="45.803" y2="45.163" gradientUnits="userSpaceOnUse"><stop stop-color="#FFE052" /><stop offset="1" stop-color="#FFC331" /></linearGradient></defs></svg>

                                </div>

                            )
                        }

                        <div className='relative h-fit flex-col flex'>
                            {visible && !data.hasNodeBeenAdded && (
                                <div className='flex flex-col space-y-1'>
                                    {border && (
                                        <button onClick={data.onAddNodeClick} className='text-xl text-green-600 font-semibold font-serif hover:text-green-500'>
                                            <IoIosAddCircle />
                                        </button>
                                    )}
                                    <button onClick={handleConfigureClick} className='text-lg text-yellow-600 font-semibold font-serif hover:text-yellow-500'>
                                        <RiListSettingsLine />
                                    </button>
                                    <button onClick={data.onDeleteNodeClick} className='text-lg text-red-600 font-semibold font-serif hover:text-red-500'>
                                        <MdCancel />
                                    </button>
                                </div>
                            )}
                        </div>
                    </div>
                )}
                {showForm && (
                    <div className='absolute bottom-0'>
                        <ReusableForm fields={fields} onSubmit={handleFormSubmit} onCancel={() => setShowForm(false)} />
                    </div>
                )}
            </div>
        </>
    );
};

export default ReusableNode;
